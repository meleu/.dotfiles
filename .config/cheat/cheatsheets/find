# repeat a command for each file found
# {} is replaced with the filename
find -name MY_FILE -exec myCommand {} \;

# put all results and execute the command only once
# (in most cases this is better than using xargs)
find -name MY_FILE -exec myCommand {} +

# ignore contents of .git/ directory
find -not -iwholename '*/\.git/*'

#Â find *.txt and remove
find ./path/ -name '*.txt' -delete

# output be like 'ls -l' and sort by column 11
find -ls | sort -k 11

# find files with paths matching the pattern
find -path '*test*' # -ipath to ignore case

# find files edited within last five days
find -mtime -5 # +5 for files edited before five days

# find files more recently modified than <FILE>
find -newer <FILE>

# octal permissions
find . -type f -perm 777

# --- from cheat/cheatsheets ---

# To find files with setuid bit set:
find . -xdev \( -perm -4000 \) -type f -print0 | xargs -0 ls -l

# To find files with extension '.txt' and look for a string into them:
find ./path/ -name '*.txt' | xargs grep 'string'

# To find files with size bigger than 5 Mebibyte and sort them by size:
find . -size +5M -type f -print0 | xargs -0 ls -Ssh | sort -z

# To find files bigger than 2 Megabyte and list them:
find . -type f -size +200000000c -exec ls -lh {} \; | awk '{ print $9 ": " $5 }'

# To find files modified more than 7 days ago and list file information:
find . -type f -mtime +7d -ls

# To find symlinks owned by a user and list file information:
find . -type l -user <username-or-userid> -ls

# To search for and delete empty directories:
find . -type d -empty -exec rmdir {} \;

# To search for directories named build at a max depth of 2 directories:
find . -maxdepth 2 -name build -type d

# To find all files that have the same node (hard link) as MY_FILE_HERE:
find . -type f -samefile MY_FILE_HERE 2>/dev/null

